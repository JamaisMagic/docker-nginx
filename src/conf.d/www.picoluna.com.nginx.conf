upstream backend_www_picoluna_com {
    server www_picoluna_com:8000;
    server www_picoluna_com:8001;
    # server 127.0.0.1:8000;
    keepalive 64;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    charset utf-8;
    return 200 "Welcome.";
}

server {
    listen 80;
    listen [::]:80;
    server_name picoluna.com www.picoluna.com;
    charset utf-8;
    return 307 https://www.picoluna.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name picoluna.com;
    charset utf-8;
    ssl_certificate /etc/letsencrypt/live/picoluna.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/picoluna.com/privkey.pem;
    return 307 https://www.picoluna.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;
    server_name www.picoluna.com;
    index index.html index.htm;
    root /data/app/www.picoluna.com/app/f2e;
    try_files $uri $uri.html $uri/index.html $uri/build/index.html $uri/dist/index.html =404;
    charset utf-8;
    access_log /data/log/nginx/www.picoluna.com.access.log main;

    ssl_certificate /etc/letsencrypt/live/picoluna.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/picoluna.com/privkey.pem;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    proxy_pass_header Server;
    proxy_pass_header X-Forwarded-For;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded_Proto $my_x_fordwarded_proto;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Nginx-Proxy true;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;
    proxy_cache off;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;

    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; img-src * data:; style-src * 'unsafe-inline'; font-src * data:; media-src * data: blob:; child-src 'self' blob:; frame-ancestors 'self'; form-action 'self'; script-src 'self' 'unsafe-inline' https: blob:; object-src 'self' https:; connect-src * https: http:" always;
    # add_header Strict-Transport-Security "max-age=86400; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=86400; preload" always;

    location = / {
        try_files $uri $uri/sub/home/dist/index.html @backend;
        expires -1;
    }

    location ~ / {
        try_files $uri $uri.html $uri/index.html $uri/build/index.html $uri/dist/index.html =404;
        expires -1;

        location ~* /(api|v)/ {
            try_files $uri @backend;
        }

        location ~ /do_not_delete.html {
            return 200 "www.picoluna.com";
            access_log off;
            log_not_found off;
        }

        location ~* ^(.*)\/(\..*|src|node_modules|web_modules|com\..*|package.*|readme.*)\/? {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~* ^\/((?![\/\.]).)+\/((?!\.).)+\/?$ {
            expires -1;
            try_files $uri $uri.html $uri/index.html $uri/build/index.html $uri/dist/index.html @history;
        }

        location ~* .*\.(js|css|map|bmp|swf|ttf|woff|woff2|ico|svg|mp4|ogg|webm|apng|mp3|aac|txt|json)$ {
            expires 30d;
            add_header Cache-Control "public";
            access_log off;
            log_not_found off;
        }

        location ~* .*\.(gif|png|jpg|jpeg|webp)$ {
            expires 30d;
            add_header Cache-Control "public";
            access_log off;
            log_not_found off;
            add_header Vary Accept;
            try_files $uri$webp_suffix $uri =404;
        }

        location ~* .*\.(html|htm)$ {
            expires -1;
        }
    }

    location @history {
        expires -1;
        rewrite_by_lua_block {
            local uri = ngx.var.uri
            local rootPath = "/data/app/www.picoluna.com/app/f2e/"
            local iterator, err = ngx.re.gmatch(uri, "((?!/).)+", "i")
            local newPath = ""

            local function exists(file)
                local ok, err, code = os.rename(file, file)
                if not ok then
                    if code == 13 then return true end
                end
                return ok, err
            end

            if not iterator then return end

            while true do
                local m, err = iterator()

                if err or not m then return end

                -- use index 0
                local dir = m[0]
                local tempPath = newPath .. "/" .. dir

                if exists(rootPath .. tempPath) then
                    newPath = tempPath
                else
                    if #newPath > 0 then
                        ngx.req.set_uri(newPath, true)
                    end
                    return
                end
            end
        }
    }

    location @backend {
        proxy_pass http://backend_www_picoluna_com;

        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Max-Age $cors_max_age;
        add_header Access-Control-Allow-Methods $cors_allow_methods always;
        add_header Access-Control-Allow-Headers $cors_allow_headers always;
        add_header Access-Control-Expose-Headers "Date" always;

        set $initial_content_length $sent_http_content_length;
        add_header 'Content-Length' "";
        add_header 'Content-Length' $cors_content_length;

        set $initial_content_type $sent_http_content_type;
        add_header Content-Type "";
        add_header Content-Type $cors_content_type;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}
